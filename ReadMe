JNachos ReadMe - Project - 3 (Fast File System)
This file was generated by [Pavan Nagathihalli Shankarappa]


-------------------
GENERAL INFORMATION
-------------------


A. No user program are required for this project.

B. Implement the dividing of a file into blocks and fragments.
	* Sector 0 and 1 are reserved for BitMap and Directory
	* File are stored in the file system. When a file is created, its header and data regions are assigned.
	* Each file will consume 1 sector for storing the header information.
	* The file system is divided into several blocks. 
	* Each block is divided into small reagions called fragments.
	* The size of the fragment is decided when the file system is created. The number of fragments the block contains is decided at the same time.

C. File Growth algorithm is implemented as per the paper.
	* If there is enought space in the current memory, the same memory is used for new allocation.
	* If the file does not have any fragments left, which means all the blocks of the file is full. Based on the new data size, new vlock is allocated untill all the data is fille and left with fragment size of data. Then check for any fragment which is available. If any fragment is available, it will allocate it else allocate the fragment in the new block.
	* If there is a fragment, then check whether the new data can be placed in the remaining fragment. If not enough, copy the old fragment data to the new block and add the new data to the block. If more than one block is required, follow the step 2 mentioned above untill all the new data is placed.

D. Every time the file data increases, it displayes the fragments which are allocated and freed.
	* The file system can be formatted every time or can use the existing one. It is based on the command argument -f.
	* When the new data is added to the existing file, the file size keeps growing and as per the file growth algorithm, the data fragments are allocated. As we do changes to the file, the data block which are freed and allocated is displayed.



------------
VERIFICATION
------------

* To verify the file system implementation, i have created a test file which creates files and writes data into it.
* As it writes data, it displyed the data block which are used.
* At the end of the all operation, the file information is fetched and peited to check whether correct info is been reterived.
* As per professor direction, i have created two files "even" and "odd".
* Even numbers is written to even file and Odd numbers are written to odd file.


-----------
Test Result
-----------

* I have performed testing to verify the File Growth Algorithm is working fine.
* Modified the number of fragments and fragment size to check the implement algorithm.
* Retrieved the data stored in the file and verified the data retrived is proper with respect to that file.
* As of now No of Fragments = 2, size of Fragment is 526 and No of Fragments in Blocks is 2
* You can modify this information in Disk.java file and check other scenarios.